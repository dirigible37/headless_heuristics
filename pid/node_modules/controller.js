define(['problem'], function(problem){
	var controller = function(solvers, solver, curProb, iters){
		var currProblem = problem.generateFunctionProblem(curProb);

		run();

		function run(){	//runs algorithms
			var solver1Params = {};
			solvers[solver].Params.forEach(function(v) {
				solver1Params[v.id] = v.value;
			});

			var solver1 = new solvers[solver].Solver(currProblem, solver1Params);

			var curSoln = new Array();
			var bestSoln = new Array();
			var curScore = 0, bestScore = Number.MAX_VALUE;
			var done = 0;
			var total_time = 0;
			var print_now = 0;
			//TODO: Make this run for variable time, not iters
			for(var j = 0; j < 10; j++) {
			//for(var j = 0; j < iters; j++) {		// TODO: changed above line to this -Taylor
				//console.log("**********");
				console.log(j);
				while(done == 0) {
					var d = new Date();
					var start = d.getTime();
					
					curSoln = solver1.step();
					curScore = parseFloat(solver1.bestLength).toFixed(6);
					if(Number(curScore) < Number(bestScore)){
						bestSoln = curSoln[0].slice();
						bestScore = curScore;
					}
					//var latency = currProblem.getLatency();
					d = new Date();
					var end = d.getTime();
					total_time += (end-start);
					if((total_time/60000) >= iters) {
						done = 1;
					}

					var best = new Array();
					//if(total_time >= print_now) {
						for(var i = 0; i < 6; i++) {
							best[i] = bestSoln[i] * 400;
							best[i] -= 200;
							best[i] = Number(best[i]).toFixed(4);
						}
						console.log(-1*bestScore);
						console.log("["+best[0]+", "+best[1]+", "+best[2]+", "+best[3]+", "+best[4]+", "+best[5]+"]");
						print_now += 1000;
					//}
				}
				solver1 = new solvers[solver].Solver(currProblem, solver1Params);
				curScore = 0; 
				bestScore = Number.MAX_VALUE;
				done = 0;
				total_time = 0;
				print_now = 0;
			}
			//console.log("Total Time: " + (total_time/1000) + " seconds");
			//console.log("Latency Time: " + (latency/1000) + " seconds");
			//console.log("Difference: " + ((total_time-latency)/1000) + " seconds");
			
		}
	};
	return controller;
});
